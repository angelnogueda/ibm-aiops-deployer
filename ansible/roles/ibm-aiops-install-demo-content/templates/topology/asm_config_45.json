[
{"name": "AddEdgeProperty","itemType": "Relationship","description": "A tool to add an edge property via prompts","entityTypes": [ "ASM_UI_TOPOLOGY_TOOL"],"priority": 2,"validForTypes": [ "*"],"script": "var name = prompt(\"property name\", \"name\");\nvar value = prompt(\"property value\", \"value\");\nvar options = {\nmethod: 'POST',\nheaders: {\n\"X-TenantID\": \"cfd95b7e-3bc7-4006-a4a8-a73a79c71255\",\n\"Authorization\": \"Basic MY_TOKEN\",\n\"Content-type\": \"application/json\"\n},\nbody: '{ \"' + name + '\": \"' + value + '\"}',\nonSuccess: _onSuccess,\nonError: _onError\n};\nasmFunctions.sendHttpRequest('https://MY_TOPO_URL/1.0/topology/resources/' + asmProperties._fromId + '/references/out/' + asmProperties._edgeType + '/' + asmProperties._toId, options);\n\nfunction _onSuccess(response, status, headers) {\nasmFunctions.showToasterMessage(\"normal\", \"Resource updated.\")\n}\nfunction _onError(response, status, headers) {\nvar msg = JSON.parse(response);\nasmFunctions.showToasterMessage(\"critical\", msg._error.description );\n}","menuLabel": "Add Vertex Property","tags": [ "ASM_UI_CONFIG"],"databaseSource": "metadata" }
,{"name": "AddVertexProperty","itemType": "Resource","description": "A tool to add a vertex property via prompts","entityTypes": [ "ASM_UI_TOPOLOGY_TOOL"],"priority": 2,"validForTypes": [ "*"],"script": "var name = prompt(\"property name\", \"name\");\nvar value = prompt(\"property value\", \"value\");\nvar options = {\nmethod: 'POST',\nheaders: {\n\"X-TenantID\": \"cfd95b7e-3bc7-4006-a4a8-a73a79c71255\",\n\"Authorization\": \"Basic MY_TOKEN\",\n\"Content-type\": \"application/json\"\n},\nbody: '{ \"' + name + '\": \"' + value + '\"}',\nonSuccess: _onSuccess,\nonError: _onError\n};\nasmFunctions.sendHttpRequest('https://MY_TOPO_URL/1.0/topology/resources/' + asmProperties._id, options);\n\nfunction _onSuccess(response, status, headers) {\nasmFunctions.showToasterMessage(\"normal\", \"Resource updated.\")\n}\n\nfunction _onError(response, status, headers) {\nvar msg = JSON.parse(response);\nasmFunctions.showToasterMessage(\"critical\", msg._error.description );\n}","menuLabel": "Add Vertex Property","tags": [ "ASM_UI_CONFIG"],"databaseSource": "metadata" }
,{"name": "DeleteVertex","itemType": "Resource","description": "Delete a vertex from the topology service","entityTypes": [ "ASM_UI_TOPOLOGY_TOOL"],"priority": 2,"validForTypes": [ "*"],"script": "var options = {\nmethod: 'DELETE',\nheaders: {\n\"X-TenantID\": \"cfd95b7e-3bc7-4006-a4a8-a73a79c71255\",\n\"Authorization\": \"Basic MY_TOKEN\",\n\"Content-type\": \"application/json\"\n},\nonSuccess: _onSuccess,\nonError: _onError\n};\nasmFunctions.sendHttpRequest('https://MY_TOPO_URL/1.0/topology/resources/' + asmProperties._id, options);\n\nfunction _onSuccess(response, status, headers) {\nasmFunctions.showToasterMessage(\"Information\", \"Resource '\" + asmProperties.name + \"' deleted.\")\n}\n\nfunction _onError(response, status, headers) {\nvar msg = JSON.parse(response);\nasmFunctions.showToasterMessage(\"critical\", msg._error.description );\n}","menuLabel": "Delete Vertex","tags": [ "ASM_UI_CONFIG"],"databaseSource": "metadata" }
,{"name": "AddVertex","itemType": "Resource","description": "Add a vertex to the topology service, and a reference to the selected vertex","entityTypes": [ "ASM_UI_TOPOLOGY_TOOL"],"priority": 2,"validForTypes": [ "*"],"script": "var name = prompt(\"Name\", \"name\");\nvar type = prompt(\"Type\", \"host\");\nvar edgeType = prompt(\"Edge type\", \"connectedTo\");\nvar toOrFrom = prompt(\"Edge 'to' or 'from' the selected node?\", \"to\");\nvar options = {\nmethod: 'POST',\nheaders: {\n\"X-TenantID\": \"cfd95b7e-3bc7-4006-a4a8-a73a79c71255\",\n\"Authorization\": \"Basic MY_TOKEN\",\n\"Content-type\": \"application/json\"\n},\nbody: '{ \"name\":\"' + name + '\", \"entityTypes\": [\"' + type + '\"], \"_references\":[{\"_' + toOrFrom + 'Id\": \"' + asmProperties._id +'\",\"_edgeType\": \"' + edgeType + '\"}]}',\nonSuccess: _onSuccess,\nonError: _onError\n};\nasmFunctions.sendHttpRequest('https://MY_TOPO_URL/1.0/topology/resources', options);\n\n\nfunction _onSuccess(response, status, headers) {\nasmFunctions.showToasterMessage('information', status + ': Created resource ' + headers.entityid);\n}\nfunction _onError(response, status, headers) {\nvar msg = JSON.parse(response);\nasmFunctions.showToasterMessage(\"critical\", msg._error.description );\n}","menuLabel": "Add Vertex","tags": [ "ASM_UI_CONFIG"],"databaseSource": "metadata" }
,{"name": "Portainer","itemType": "Resource","description": "Launch Portainer in an iFrame for docker resources","entityTypes": [ "ASM_UI_TOPOLOGY_TOOL"],"priority": "5","validForTypes": [ "image", "network"],"script": "var portainerUrl = \"http://MY_TOPO_URL:9000/#/\";\nwindow.open(portainerUrl + asmProperties.entityTypes[0] + \"s/\" + asmProperties.dockerId + \"/\", \"portainer\", \"width=1200,height=800\");","menuLabel": "Portainer","tags": [ "ASM_UI_CONFIG"] }
,{"name": "PortainerConsole","itemType": "Resource","description": "Launch console via portainer","entityTypes": [ "ASM_UI_TOPOLOGY_TOOL"],"priority": "5","validForTypes": [ "container"],"script": "var portainerUrl = \"http://MY_TOPO_URL:9000/#/\";\nwindow.open(portainerUrl + asmProperties.entityTypes[0] + \"s/\" + asmProperties.dockerId + \"/console\", \"portainer\", \"width=1200,height=800\");","menuLabel": "Launch Console","tags": [ "ASM_UI_CONFIG"] }
,{"name": "PortainerContainerStats","itemType": "Resource","description": "show container stats","entityTypes": [ "ASM_UI_TOPOLOGY_TOOL"],"priority": "5","validForTypes": [ "container"],"script": "var portainerUrl = \"http://MY_TOPO_URL:9000/#/\";\nwindow.open(portainerUrl + asmProperties.entityTypes[0] + \"s/\" + asmProperties.dockerId + \"/stats\", \"portainer\", \"width=1200,height=800\");","menuLabel": "Portainer Stats","tags": [ "ASM_UI_CONFIG"] }
,{"name": "PortainerSwarmNode","itemType": "Resource","description": "launch node ui in portainer for a docker-engine","entityTypes": [ "ASM_UI_TOPOLOGY_TOOL"],"priority": "5","validForTypes": [ "application"],"script": "var portainerUrl = \"http://MY_TOPO_URL:9000/#/\";\nwindow.open(portainerUrl + \"nodes/\" + asmProperties.uniqueId + \"/\", \"portainer\", \"width=1200,height=800\");","menuLabel": "Portainer","tags": [ "ASM_UI_CONFIG"] }
,{"name": "PortainerService","itemType": "Resource","description": "Launch portainer UI for service","entityTypes": [ "ASM_UI_TOPOLOGY_TOOL"],"priority": "5","validForTypes": [ "service"],"script": "var portainerUrl = \"http://MY_TOPO_URL:9000/#/\";\nwindow.open(portainerUrl + asmProperties.entityTypes[0] + \"/\" + asmProperties.dockerId + \"/\", \"portainer\", \"width=1200,height=800\");","menuLabel": "Portainer","tags": [ "ASM_UI_CONFIG"] }
,{"name": "PortainerContainerVolumes","itemType": "Resource","description": "Portainer tool for containers and volumes","entityTypes": [ "ASM_UI_TOPOLOGY_TOOL"],"priority": "5","validForTypes": [ "container", "volume"],"script": "var portainerUrl = \"http://MY_TOPO_URL:9000/#/\";\nwindow.open(portainerUrl + asmProperties.entityTypes[0] + \"s/\" + asmProperties.dockerId, \"portainer\", \"width=1200,height=800\");","menuLabel": "Portainer","tags": [ "ASM_UI_CONFIG"] }
,{"name": "PortainerTask","itemType": "Both","description": "Launch UI for docker tasks","entityTypes": [ "ASM_UI_TOPOLOGY_TOOL"],"priority": "5","validForTypes": [ "task"],"script": "var portainerUrl = \"http://MY_TOPO_URL:9000/#/\";\nwindow.open(portainerUrl + asmProperties.entityTypes[0] + \"/\" + asmProperties.dockerId, \"portainer\", \"width=1200,height=800\");","menuLabel": "Portainer","tags": [ "ASM_UI_CONFIG"] }
,{"keyIndexName": "ASM::edgeType::aggregation::contains","vertexType": "edgeType","edgeType": "contains","edgeLabel": "aggregation","databaseSource": "edges"}
,{"keyIndexName": "ASM::edgeType::association::assignedTo","vertexType": "edgeType","edgeType": "assignedTo","edgeLabel": "association","databaseSource": "edges"}
,{"keyIndexName": "ASM::edgeType::association::exposes","vertexType": "edgeType","edgeType": "exposes","edgeLabel": "association","databaseSource": "edges"}
,{"keyIndexName": "ASM::edgeType::association::has","vertexType": "edgeType","edgeType": "has","edgeLabel": "association","databaseSource": "edges"}
,{"keyIndexName": "ASM::edgeType::association::manages","vertexType": "edgeType","edgeType": "manages","edgeLabel": "association","databaseSource": "edges"}
,{"keyIndexName": "ASM::edgeType::association::uses","vertexType": "edgeType","edgeType": "uses","edgeLabel": "association","databaseSource": "edges"}
,{"keyIndexName": "ASM::edgeType::dataFlow::accessedVia","vertexType": "edgeType","edgeType": "accessedVia","edgeLabel": "dataFlow","databaseSource": "edges"}
,{"keyIndexName": "ASM::edgeType::dependency::dependsOn","vertexType": "edgeType","edgeType": "dependsOn","edgeLabel": "dependency","databaseSource": "edges"}
,{"keyIndexName": "ASM::edgeType::dependency::runsOn","vertexType": "edgeType","edgeType": "runsOn","edgeLabel": "dependency","databaseSource": "edges"}
,{"keyIndexName": "ASM::edgeType::dependency::accesses","vertexType": "edgeType","edgeType": "accesses","edgeLabel": "dependency","databaseSource": "edges"}
,{"keyIndexName": "ASM::edgeType::dependency::calls","vertexType": "edgeType","edgeType": "calls","edgeLabel": "dependency","databaseSource": "edges"}
,{"keyIndexName": "ASM::edgeType::dependency::exposedBy","vertexType": "edgeType","edgeType": "exposedBy","edgeLabel": "dependency","databaseSource": "edges"}
,{"linkLabel": "accesses","vertexType": "metadata","linkId": "qsG2nzzhRfCLf5llcpqUiw","linkType": "accesses","style": {"stroke": "#a702d2","strokeWidth": "2px","strokeDasharray": ""},"entityTypes": ["ASM_UI_LINK_TYPE_DEFINITION"],"uniqueId": "accesses","tags": ["ASM_UI_CONFIG"],"databaseSource": "metadata"}
,{"linkLabel": "calls","vertexType": "metadata","linkId": "l11zKwTeT2ukGO--l_-nRA","linkType": "calls","style": {"stroke": "#009407","strokeWidth": "2px","strokeDasharray": ""},"entityTypes": ["ASM_UI_LINK_TYPE_DEFINITION"],"uniqueId": "calls","tags": ["ASM_UI_CONFIG"],"databaseSource": "metadata"}
,{"linkLabel": "runsOn","vertexType": "metadata","linkType": "runsOn","style": {"stroke": "#9b0000","strokeWidth": "","strokeDasharray": ""},"entityTypes": ["ASM_UI_LINK_TYPE_DEFINITION"],"uniqueId": "runsOn","tags": ["ASM_UI_CONFIG"],"databaseSource": "metadata"}
,{"linkLabel": "exposedBy","vertexType": "metadata","linkType": "exposedBy","style": {"stroke": "#a97801","strokeWidth": "","strokeDasharray": ""},"entityTypes": ["ASM_UI_LINK_TYPE_DEFINITION"],"uniqueId": "exposedBy","tags": ["ASM_UI_CONFIG"],"databaseSource": "metadata"}
,{"rootRankLayoutOrientation": "TopToBottom","autoRenderUpdates": false,"toasterAutoHideTime": 3000,"maintainZoomEnabled": false,"defaultLayoutType": "ROOT_RANK","planarRankLayoutOrientation": "TopToBottom","screenReaderTextEnabled": false,"removeDeletedUpdates": false,"clientDebugEnabled": false,"tags": ["ASM_UI_CONFIG"],"vertexType": "metadata","maxResourcesAutoRefreshLimit": 500,"defaultAutoRefreshRate": 30000,"rankLayoutOrientation": "TopToBottom","hierarchyLayoutOrientation": "TopToBottom","entityTypes": ["ASM_UI_USER_PREFERENCES"],"uniqueId": "ASM_UI_User_Preferences_demo","databaseSource": "metadata"}
,{"name": "Bronze","keyIndexName": "waiopsBusinessCriticalityMetadata::bronze","vertexType": "metadata","description": "Bronze priority","entityTypes": ["WAIOPS_BUSINESS_CRITICALITY"],"businessCriticalityValue": 25,"tags": ["ASM_UI_CONFIG"],"databaseSource": "metadata"}
,{"name": "Platinum","keyIndexName": "waiopsBusinessCriticalityMetadata::platinum","vertexType": "metadata","description": "Platinum priority","entityTypes": ["WAIOPS_BUSINESS_CRITICALITY"],"businessCriticalityValue": 100,"tags": ["ASM_UI_CONFIG"],"databaseSource": "metadata"}
,{"name": "Gold","keyIndexName": "waiopsBusinessCriticalityMetadata::gold","vertexType": "metadata","description": "Gold priority","entityTypes": ["WAIOPS_BUSINESS_CRITICALITY"],"businessCriticalityValue": 75,"de scription": "Gold priority","tags": ["ASM_UI_CONFIG"],"databaseSource": "metadata"}
,{"name": "Silver","keyIndexName": "waiopsBusinessCriticalityMetadata::silver","vertexType": "metadata","description": "Silver priority","entityTypes": ["WAIOPS_BUSINESS_CRITICALITY"],"businessCriticalityValue": 50,"tags": ["ASM_UI_CONFIG"],"databaseSource": "metadata"}
,{"tags": ["ASM_UI_CONFIG"],"vertexType": "metadata",    "trustedSites": ["asm-develop-svt.fyre.ibm.com", "MY_TOPO_URL"],"mapClusterPixelSize": "60","mapTileAttribution": "&copy;ibm.com","mapTileUrl": "https://tile.openstreetmap.org/{z}/{x}/{y}.png","entityTypes": ["ASM_UI_GLOBAL_SETTINGS"],"uniqueId": "globalSettings","resourceTypeFilter": [], "maxHops": 30, "inventoryFilterProperties": [ { "property": "zone", "operators": [ ">=", ">", "<", "<=", "=", "!=" ] } ], "hiddenProperties": [], "historicalChangesThreshold": 50, "requiredProperties": [ { "property": "colour", "tooltip": false }, { "property": "zone", "tooltip": true } ], "edgeTypeFilter": [], "enableAdjacentEdges": true, "searchIncludeDeleted": true, "enableTechPreview": false}
,{"name": "DemoTool","itemType": "Resource","description": "sss","conditionsScript": "if (asmProperties.namespace == 'sock-shop') {\n return true; \n} else {\n return false;\n}","priority": 5,"script": "alert(\"test\")\nlet printStatusCallback = function(statuses) {\n statuses.forEach(function(status) {\n asmFunctions.showToasterMessage('warning', 'aaa:'+ status.status);\n asmFunctions.showToasterMessage('warning', 'aaa:'+ status.state);\n asmFunctions.showToasterMessage('warning', 'aaa:'+ status.severity);\n\n console.log('status:', status.status,\n 'state:', status.state,\n 'severity:', status.severity,\n 'time:', new Date(status.time));\n })\n}\nasmFunctions.getResourceStatus(asmSourceProperties._id, printStatusCallback);\n\n\nasmFunctions.showToasterMessage('warning', 'I am an alert box!'+ mystatus);\n\n\n","tags": ["ASM_UI_CONFIG"],"vertexType": "metadata","entityTypes": ["ASM_UI_TOPOLOGY_TOOL"],"validForTypes": ["deployment", "vm"],"menuLabel": "DemoTool","databaseSource": "metadata"}
,{"name": "gitissue","itemType": "Both","description": "","conditionsScript": "","priority": 5,"script": "const baseUrl = 'https://github.com/niklaushirt/cp4waiops-deployer/issues/new?';\nconst labels = 'labels[Type: Defect]';\nconst title = '&title=Defect: ' + asmProperties.name;\nconst milestone = '&milestone=fakeMilestone';\nlet bodyText = '&body=ASM generated issue, provide issue details below: \\n';\n\nlet statusCallback = function(statuses) {\nif (statuses.length) {\nlet statusTable = `| Status | Severity| State |\\n|---|---|---|`;\nstatuses.forEach(function(status) {\nstatusTable += `\\n| ${status.status} | ${status.severity} | ${status.state} |`;\n});\nbodyText += '\\n\\n' + statusTable;\n}\nconsole.log(asmProperties, statuses);\nlet propTable = `\\n\\n| Property|Value |\\n|---|---|`;\nconst props = Object.entries(asmProperties);\nprops.forEach(function(prop) {\npropTable += `\\n| ${prop[0]} | ${prop[1]}|`;\n});\nbodyText += propTable;\n\nconst finalUrl = baseUrl + labels + title + milestone + bodyText;\nconst encodedUrl = encodeURI(finalUrl);\nwindow.open(encodedUrl);\n}\nasmFunctions.getResourceStatus(asmProperties._id, statusCallback);","tags": ["ASM_UI_CONFIG"],"vertexType": "metadata","entityTypes": ["ASM_UI_TOPOLOGY_TOOL"],"validForTypes": ["deployment", "vm", "database"],"menuLabel": "Open Git Issue","databaseSource": "metadata"}
,{"name": "showalert","itemType": "Both","description": "","conditionsScript": "","priority": 5,"script": "let callback = function(statuses) {\nstatuses.forEach(function(status) {\nasmFunctions.showToasterMessage('warning', '_id:' + asmProperties._id + \n ', name:' + asmProperties.name + \n ', status:' + status.status +\n ', state:' + status.state + \n ', severity:' + status.severity +\n ', time:' + new Date(status.time));\n });\n};\nasmFunctions.getResourceStatus(asmProperties._id,callback);","tags": ["ASM_UI_CONFIG"],"vertexType": "metadata","entityTypes": ["ASM_UI_TOPOLOGY_TOOL"],"validForTypes": ["*"],"menuLabel": "Show First Alert","databaseSource": "metadata"}
,{"name": "application","keyIndexName": "ASM::entityType::resource::application","vertexType": "entityType","icon": "application","description": "resource","databaseSource": "types"}
,{"name": "cluster","keyIndexName": "ASM::entityType::resource::cluster","vertexType": "entityType","icon": "cluster","description": "resource","databaseSource": "types"}
,{"name": "cpu","keyIndexName": "ASM::entityType::resource::cpu","vertexType": "entityType","icon": "cpu","description": "resource","databaseSource": "types"}
,{"name": "image","keyIndexName": "ASM::entityType::resource::image","vertexType": "entityType","icon": "save","description": "resource","databaseSource": "types"}
,{"name": "ipaddress","keyIndexName": "ASM::entityType::resource::ipaddress","vertexType": "entityType","icon": "ipaddress","description": "resource","databaseSource": "types"}
,{"name": "location","keyIndexName": "ASM::entityType::resource::location","vertexType": "entityType","icon": "location","description": "resource","databaseSource": "types"}
,{"name": "namespace","keyIndexName": "ASM::entityType::resource::namespace","vertexType": "entityType","icon": "sector","description": "resource","databaseSource": "types"}
,{"name": "operatingsystem","keyIndexName": "ASM::entityType::resource::operatingsystem","vertexType": "entityType","icon": "os","description": "resource","databaseSource": "types"}
,{"name": "persistentvolume","keyIndexName": "ASM::entityType::resource::persistentvolume","vertexType": "entityType","icon": "undefined","description": "resource","databaseSource": "types"}
,{"name": "port","keyIndexName": "ASM::entityType::resource::port","vertexType": "entityType","icon": "networkinterface","description": "resource","databaseSource": "types"}
,{"name": "router","keyIndexName": "ASM::entityType::resource::router","vertexType": "entityType","icon": "router","description": "resource","databaseSource": "types"}
,{"name": "switch","keyIndexName": "ASM::entityType::resource::switch","vertexType": "entityType","icon": "switch","description": "resource","databaseSource": "types"}
,{"name": "router","vertexType": "metadata","shape": "","size": "","maxLabelLength": "","resourceLabel": "","style": {"stroke": "#ffb835","strokeDasharray": "","fill": "#ffedb1"},"entityTypes": ["ASM_UI_RESOURCE_TYPE_DEFINITION"],"tags": ["ASM_UI_CONFIG"],"databaseSource": "metadata"}
,{"name": "image","vertexType": "metadata","shape": "","size": "small","maxLabelLength": "","resourceLabel": "","style": {"stroke": "","strokeDasharray": "","fill": ""},"entityTypes": ["ASM_UI_RESOURCE_TYPE_DEFINITION"],"tags": ["ASM_UI_CONFIG"],"databaseSource": "metadata"}
,{"name": "operatingsystem","vertexType": "metadata","shape": "","size": "small","maxLabelLength": "","resourceLabel": "","style": {"stroke": "","strokeDasharray": "","fill": ""},"entityTypes": ["ASM_UI_RESOURCE_TYPE_DEFINITION"],"tags": ["ASM_UI_CONFIG"],"databaseSource": "metadata"}
,{"name": "cpu","vertexType": "metadata","shape": "","size": "small","maxLabelLength": "","resourceLabel": "","style": {"stroke": "","strokeDasharray": "","fill": ""},"entityTypes": ["ASM_UI_RESOURCE_TYPE_DEFINITION"],"tags": ["ASM_UI_CONFIG"],"databaseSource": "metadata"}
,{"name": "location","vertexType": "metadata","shape": "","size": "","maxLabelLength": "","resourceLabel": "","style": {"stroke": "#e87835","strokeDasharray": "","fill": "#ffd8cb"},"entityTypes": ["ASM_UI_RESOURCE_TYPE_DEFINITION"],"tags": ["ASM_UI_CONFIG"],"databaseSource": "metadata"}
,{"name": "port","vertexType": "metadata","shape": "","size": "","maxLabelLength": "","resourceLabel": "","style": {"stroke": "#ffb835","strokeDasharray": "","fill": "#ffedb1"},"entityTypes": ["ASM_UI_RESOURCE_TYPE_DEFINITION"],"tags": ["ASM_UI_CONFIG"],"databaseSource": "metadata"}
,{"name": "cluster","vertexType": "metadata","shape": "","size": "","maxLabelLength": "","resourceLabel": "","style": {"stroke": "#e87835","strokeDasharray": "","fill": "#ffd8cb"},"entityTypes": ["ASM_UI_RESOURCE_TYPE_DEFINITION"],"tags": ["ASM_UI_CONFIG"],"databaseSource": "metadata"}
,{"name": "application","vertexType": "metadata","shape": "rect","size": "large","maxLabelLength": "","resourceLabel": "","style": {"stroke": "#eea20d","strokeDasharray": "","fill": "#ffffb5"},"entityTypes": ["ASM_UI_RESOURCE_TYPE_DEFINITION"],"tags": ["ASM_UI_CONFIG"],"databaseSource": "metadata"}
,{"name": "ipaddress","vertexType": "metadata","shape": "","size": "small","maxLabelLength": "","resourceLabel": "","style": {"stroke": "","strokeDasharray": "","fill": ""},"entityTypes": ["ASM_UI_RESOURCE_TYPE_DEFINITION"],"tags": ["ASM_UI_CONFIG"],"databaseSource": "metadata"}
,{"name": "switch","vertexType": "metadata","shape": "","size": "","maxLabelLength": "","resourceLabel": "","style": {"stroke": "#ffb835","strokeDasharray": "","fill": "#ffedb1"},"entityTypes": ["ASM_UI_RESOURCE_TYPE_DEFINITION"],"tags": ["ASM_UI_CONFIG"],"databaseSource": "metadata"}
]