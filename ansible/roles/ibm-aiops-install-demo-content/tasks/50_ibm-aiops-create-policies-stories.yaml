

# *************************************************************************************************************************************************
# --------------------------------------------------------------------------------------------------------------------------------------
# Create Gateway
# --------------------------------------------------------------------------------------------------------------------------------------
# *************************************************************************************************************************************************
    
## RUNBOOKS Duplicate

- name: 🛰️  START - CREATE POLICY STORIES
  debug: 
    msg="{{ lookup('pipe','date +%d.%m.%Y---%H:%M:%S') }}"


- name: Log
  shell: |
    export MESSAGE="Create Policy for Incident Creation"
    export currentDate=$(date +%Y-%m-%d_%H:%M)
    echo "---------------------------------------------------------------------------------------------------------------------------------------------------" >> ../install_{{current_ibmaiops_feature.kind}}.log
    echo $currentDate" - "$MESSAGE  >> ../install_{{current_ibmaiops_feature.kind}}.log
  ignore_errors: true

- name: 📣 OCP CONSOLE - Create Openshift NOTIFICATION
  shell: |
    cat <<EOF | oc apply -f -
    apiVersion: console.openshift.io/v1
    kind: ConsoleNotification
    metadata:
      name: ibm-aiops-notification
    spec:
      backgroundColor: '#ffd500'
      color: '#000'
      location: {{global_config.position_ocp_notifications | default("BannerTop")}}
      text: 'Installing {{current_ibmaiops_feature.kind}} - Create Policy for Incident Creation'    
    EOF
  ignore_errors: true
  args:
    executable: /bin/bash
  when: global_config.create_ocp_notifications | default(true) == true  





- name: 🛠️  POLICIES - Create Incident Creation Policy
  shell: |
    export AIOPS_NAMESPACE=$(oc get po -A|grep aiops-orchestrator-controller |awk '{print$1}')

    export POLICY_USERNAME=$(oc get secret -n $AIOPS_NAMESPACE aiops-ir-lifecycle-policy-registry-svc -o jsonpath='{.data.username}' | base64 --decode)
    export POLICY_PASSWORD=$(oc get secret -n $AIOPS_NAMESPACE aiops-ir-lifecycle-policy-registry-svc -o jsonpath='{.data.password}' | base64 --decode)
    export POLICY_LOGIN="$POLICY_USERNAME:$POLICY_PASSWORD"
    echo $POLICY_LOGIN

    oc create route passthrough --insecure-policy="Redirect" policy-api -n $AIOPS_NAMESPACE --service aiops-ir-lifecycle-policy-registry-svc --port ssl-port

    export POLICY_ROUTE=$(oc get routes -n $AIOPS_NAMESPACE policy-api -o jsonpath="{['spec']['host']}")
    echo $POLICY_ROUTE


    # ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    # ALL - DISABLED

    # export POLICY_FILE="{{role_path}}/templates/policies/incident-creation-policy.json"
    # echo $POLICY_FILE
    # cp $POLICY_FILE /tmp/incident_policy.json

    # export result=$(curl -XGET -k -s "https://$POLICY_ROUTE/policyregistry.ibm-netcool-prod.aiops.io/v1alpha/system/cfd95b7e-3bc7-4006-a4a8-a73a79c71255/"  \
    #   -H 'X-TenantID: cfd95b7e-3bc7-4006-a4a8-a73a79c71255' \
    #   -H 'content-type: application/json' \
    #   -u $POLICY_LOGIN|grep "DEMO Incident creation policy for all alerts"|wc -l|tr -d ' ')

    # if [[ $result == "0" ]]; then
    #   export result="Create Incident Creation Policy "
    #   export result=$(curl -XPOST -k -s "https://$POLICY_ROUTE/policyregistry.ibm-netcool-prod.aiops.io/v1alpha/system/cfd95b7e-3bc7-4006-a4a8-a73a79c71255/policies"  \
    #     -H 'X-TenantID: cfd95b7e-3bc7-4006-a4a8-a73a79c71255' \
    #     -H 'content-type: application/json' \
    #     -u $POLICY_LOGIN \
    #     -d @/tmp/incident_policy.json)
    # else 
    #   export result="Already exists"
    # fi 
    # echo $result




    
    # ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    # ROBOT SHOP
    export POLICY_FILE="{{role_path}}/templates/policies/incident-creation-policy-robot.json"
    echo $POLICY_FILE
    cp $POLICY_FILE /tmp/incident_policy.json


    export result=$(curl -XGET -k -s "https://$POLICY_ROUTE/policyregistry.ibm-netcool-prod.aiops.io/v1alpha/system/cfd95b7e-3bc7-4006-a4a8-a73a79c71255/"  \
      -H 'X-TenantID: cfd95b7e-3bc7-4006-a4a8-a73a79c71255' \
      -H 'content-type: application/json' \
      -u $POLICY_LOGIN|grep "DEMO Incident - robot-shop"|wc -l|tr -d ' ')

    if [[ $result == "0" ]]; then
      export result="Create Incident Creation Policy "
      export result=$(curl -XPOST -k -s "https://$POLICY_ROUTE/policyregistry.ibm-netcool-prod.aiops.io/v1alpha/system/cfd95b7e-3bc7-4006-a4a8-a73a79c71255/policies"  \
        -H 'X-TenantID: cfd95b7e-3bc7-4006-a4a8-a73a79c71255' \
        -H 'content-type: application/json' \
        -u $POLICY_LOGIN \
        -d @/tmp/incident_policy.json)
    else 
      export result="Already exists"
    fi 
    echo $result


    # ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    # SOCK SHOP
    export POLICY_FILE="{{role_path}}/templates/policies/incident-creation-policy-sock.json"
    echo $POLICY_FILE
    cp $POLICY_FILE /tmp/incident_policy.json


    export result=$(curl -XGET -k -s "https://$POLICY_ROUTE/policyregistry.ibm-netcool-prod.aiops.io/v1alpha/system/cfd95b7e-3bc7-4006-a4a8-a73a79c71255/"  \
      -H 'X-TenantID: cfd95b7e-3bc7-4006-a4a8-a73a79c71255' \
      -H 'content-type: application/json' \
      -u $POLICY_LOGIN|grep "DEMO Incident - sock-shop"|wc -l|tr -d ' ')

    if [[ $result == "0" ]]; then
      export result="Create Incident Creation Policy "
      export result=$(curl -XPOST -k -s "https://$POLICY_ROUTE/policyregistry.ibm-netcool-prod.aiops.io/v1alpha/system/cfd95b7e-3bc7-4006-a4a8-a73a79c71255/policies"  \
        -H 'X-TenantID: cfd95b7e-3bc7-4006-a4a8-a73a79c71255' \
        -H 'content-type: application/json' \
        -u $POLICY_LOGIN \
        -d @/tmp/incident_policy.json)
    else 
      export result="Already exists"
    fi 
    echo $result


    # ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    # ACME
    export POLICY_FILE="{{role_path}}/templates/policies/incident-creation-policy-acme.json"
    echo $POLICY_FILE
    cp $POLICY_FILE /tmp/incident_policy.json


    export result=$(curl -XGET -k -s "https://$POLICY_ROUTE/policyregistry.ibm-netcool-prod.aiops.io/v1alpha/system/cfd95b7e-3bc7-4006-a4a8-a73a79c71255/"  \
      -H 'X-TenantID: cfd95b7e-3bc7-4006-a4a8-a73a79c71255' \
      -H 'content-type: application/json' \
      -u $POLICY_LOGIN|grep "DEMO Incident - acme"|wc -l|tr -d ' ')

    if [[ $result == "0" ]]; then
      export result="Create Incident Creation Policy "
      export result=$(curl -XPOST -k -s "https://$POLICY_ROUTE/policyregistry.ibm-netcool-prod.aiops.io/v1alpha/system/cfd95b7e-3bc7-4006-a4a8-a73a79c71255/policies"  \
        -H 'X-TenantID: cfd95b7e-3bc7-4006-a4a8-a73a79c71255' \
        -H 'content-type: application/json' \
        -u $POLICY_LOGIN \
        -d @/tmp/incident_policy.json)
    else 
      export result="Already exists"
    fi 
    echo $result


    # ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    # ROBOT TELCO
    export POLICY_FILE="{{role_path}}/templates/policies/incident-creation-policy-telco.json"
    echo $POLICY_FILE
    cp $POLICY_FILE /tmp/incident_policy.json


    export result=$(curl -XGET -k -s "https://$POLICY_ROUTE/policyregistry.ibm-netcool-prod.aiops.io/v1alpha/system/cfd95b7e-3bc7-4006-a4a8-a73a79c71255/"  \
      -H 'X-TenantID: cfd95b7e-3bc7-4006-a4a8-a73a79c71255' \
      -H 'content-type: application/json' \
      -u $POLICY_LOGIN|grep "DEMO Incident - telco"|wc -l|tr -d ' ')

    if [[ $result == "0" ]]; then
      export result="Create Incident Creation Policy "
      export result=$(curl -XPOST -k -s "https://$POLICY_ROUTE/policyregistry.ibm-netcool-prod.aiops.io/v1alpha/system/cfd95b7e-3bc7-4006-a4a8-a73a79c71255/policies"  \
        -H 'X-TenantID: cfd95b7e-3bc7-4006-a4a8-a73a79c71255' \
        -H 'content-type: application/json' \
        -u $POLICY_LOGIN \
        -d @/tmp/incident_policy.json)
    else 
      export result="Already exists"
    fi 
    echo $result


    # ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    # ROBOT TUBE
    export POLICY_FILE="{{role_path}}/templates/policies/incident-creation-policy-tube.json"
    echo $POLICY_FILE
    cp $POLICY_FILE /tmp/incident_policy.json


    export result=$(curl -XGET -k -s "https://$POLICY_ROUTE/policyregistry.ibm-netcool-prod.aiops.io/v1alpha/system/cfd95b7e-3bc7-4006-a4a8-a73a79c71255/"  \
      -H 'X-TenantID: cfd95b7e-3bc7-4006-a4a8-a73a79c71255' \
      -H 'content-type: application/json' \
      -u $POLICY_LOGIN|grep "DEMO Incident - tube"|wc -l|tr -d ' ')

    if [[ $result == "0" ]]; then
      export result="Create Incident Creation Policy "
      export result=$(curl -XPOST -k -s "https://$POLICY_ROUTE/policyregistry.ibm-netcool-prod.aiops.io/v1alpha/system/cfd95b7e-3bc7-4006-a4a8-a73a79c71255/policies"  \
        -H 'X-TenantID: cfd95b7e-3bc7-4006-a4a8-a73a79c71255' \
        -H 'content-type: application/json' \
        -u $POLICY_LOGIN \
        -d @/tmp/incident_policy.json)
    else 
      export result="Already exists"
    fi 
    echo $result



    # ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    # ROBOT CATCHALL
    export POLICY_FILE="{{role_path}}/templates/policies/incident-creation-policy-catchall.json"
    echo $POLICY_FILE
    cp $POLICY_FILE /tmp/incident_policy.json


    export result=$(curl -XGET -k -s "https://$POLICY_ROUTE/policyregistry.ibm-netcool-prod.aiops.io/v1alpha/system/cfd95b7e-3bc7-4006-a4a8-a73a79c71255/"  \
      -H 'X-TenantID: cfd95b7e-3bc7-4006-a4a8-a73a79c71255' \
      -H 'content-type: application/json' \
      -u $POLICY_LOGIN|grep "DEMO Incident - catchall"|wc -l|tr -d ' ')

    if [[ $result == "0" ]]; then
      export result="Create Incident Creation Policy "
      export result=$(curl -XPOST -k -s "https://$POLICY_ROUTE/policyregistry.ibm-netcool-prod.aiops.io/v1alpha/system/cfd95b7e-3bc7-4006-a4a8-a73a79c71255/policies"  \
        -H 'X-TenantID: cfd95b7e-3bc7-4006-a4a8-a73a79c71255' \
        -H 'content-type: application/json' \
        -u $POLICY_LOGIN \
        -d @/tmp/incident_policy.json)
    else 
      export result="Already exists"
    fi 
    echo $result

  ignore_errors: true
  register: POLICY_RESULT
  args:
    executable: /bin/bash
    
- name: 🟣 OUTPUT
  debug: 
    var: POLICY_RESULT.stdout_lines
    verbosity: 1





- name: 🛠️  POLICIES - Create Similar Incidents Policy
  shell: |
    export POLICY_FILE="{{role_path}}/templates/policies/similar-incidents-policy.json"
    echo $POLICY_FILE
    cp $POLICY_FILE /tmp/similar-incidents-policy.json

    export AIOPS_NAMESPACE=$(oc get po -A|grep aiops-orchestrator-controller |awk '{print$1}')

    export POLICY_USERNAME=$(oc get secret -n $AIOPS_NAMESPACE aiops-ir-lifecycle-policy-registry-svc -o jsonpath='{.data.username}' | base64 --decode)
    export POLICY_PASSWORD=$(oc get secret -n $AIOPS_NAMESPACE aiops-ir-lifecycle-policy-registry-svc -o jsonpath='{.data.password}' | base64 --decode)
    export POLICY_LOGIN="$POLICY_USERNAME:$POLICY_PASSWORD"
    echo $POLICY_LOGIN

    oc create route passthrough --insecure-policy="Redirect" policy-api -n $AIOPS_NAMESPACE --service aiops-ir-lifecycle-policy-registry-svc --port ssl-port

    export POLICY_ROUTE=$(oc get routes -n $AIOPS_NAMESPACE policy-api -o jsonpath="{['spec']['host']}")
    echo $POLICY_ROUTE

    export result=$(curl -XGET -k -s "https://$POLICY_ROUTE/policyregistry.ibm-netcool-prod.aiops.io/v1alpha/system/cfd95b7e-3bc7-4006-a4a8-a73a79c71255/"  \
      -H 'X-TenantID: cfd95b7e-3bc7-4006-a4a8-a73a79c71255' \
      -H 'content-type: application/json' \
      -u $POLICY_LOGIN|grep "DEMO Similar Incident detection for Incidents"|wc -l|tr -d ' ')
      
    if [[ $result == "0" ]]; then
      export result="Create Similar Incident Policy "
      export result=$(curl -XPOST -k -s "https://$POLICY_ROUTE/policyregistry.ibm-netcool-prod.aiops.io/v1alpha/system/cfd95b7e-3bc7-4006-a4a8-a73a79c71255/policies"  \
        -H 'X-TenantID: cfd95b7e-3bc7-4006-a4a8-a73a79c71255' \
        -H 'content-type: application/json' \
        -u $POLICY_LOGIN \
        -d @/tmp/similar-incidents-policy.json)
    else 
      export result="Already exists"
    fi 
    echo $result
  ignore_errors: true
  register: POLICY_RESULT
  args:
    executable: /bin/bash
    
- name: 🟣 OUTPUT
  debug: 
    var: POLICY_RESULT.stdout_lines
    verbosity: 1





- name: 🛠️  POLICIES - Create Scope Based Grouping Policy
  shell: |
    export POLICY_FILE="{{role_path}}/templates/policies/scope-based-grouping.json"
    echo $POLICY_FILE
    cp $POLICY_FILE /tmp/scope_policy.json

    export AIOPS_NAMESPACE=$(oc get po -A|grep aiops-orchestrator-controller |awk '{print$1}')

    export POLICY_USERNAME=$(oc get secret -n $AIOPS_NAMESPACE aiops-ir-lifecycle-policy-registry-svc -o jsonpath='{.data.username}' | base64 --decode)
    export POLICY_PASSWORD=$(oc get secret -n $AIOPS_NAMESPACE aiops-ir-lifecycle-policy-registry-svc -o jsonpath='{.data.password}' | base64 --decode)
    export POLICY_LOGIN="$POLICY_USERNAME:$POLICY_PASSWORD"
    echo $POLICY_LOGIN

    export POLICY_ROUTE=$(oc get routes -n $AIOPS_NAMESPACE policy-api -o jsonpath="{['spec']['host']}")
    echo $POLICY_ROUTE

    export result=$(curl -XGET -k -s "https://$POLICY_ROUTE/policyregistry.ibm-netcool-prod.aiops.io/v1alpha/system/cfd95b7e-3bc7-4006-a4a8-a73a79c71255/"  \
      -H 'X-TenantID: cfd95b7e-3bc7-4006-a4a8-a73a79c71255' \
      -H 'content-type: application/json' \
      -u $POLICY_LOGIN|grep "DEMO Scope Grouping"|wc -l|tr -d ' ')

    if [[ $result == "0" ]]; then
      export result=$(curl -XPOST -k -s "https://$POLICY_ROUTE/policyregistry.ibm-netcool-prod.aiops.io/v1alpha/system/cfd95b7e-3bc7-4006-a4a8-a73a79c71255/policies"  \
        -H 'X-TenantID: cfd95b7e-3bc7-4006-a4a8-a73a79c71255' \
        -H 'content-type: application/json' \
        -u $POLICY_LOGIN \
        -d @/tmp/scope_policy.json)
    else 
      export result="Already exists"
    fi 
    echo $result
  ignore_errors: true
  register: POLICY_RESULT
  args:
    executable: /bin/bash


- name: 🟣 OUTPUT
  debug: 
    var: POLICY_RESULT.stdout_lines
    verbosity: 1




- name: 🛠️  POLICIES - Delete Default scope policy
  shell: |    
    export AIOPS_NAMESPACE=$(oc get po -A|grep aiops-orchestrator-controller |awk '{print$1}')

    export POLICY_USERNAME=$(oc get secret -n $AIOPS_NAMESPACE aiops-ir-lifecycle-policy-registry-svc -o jsonpath='{.data.username}' | base64 --decode)
    export POLICY_PASSWORD=$(oc get secret -n $AIOPS_NAMESPACE aiops-ir-lifecycle-policy-registry-svc -o jsonpath='{.data.password}' | base64 --decode)
    export POLICY_LOGIN="$POLICY_USERNAME:$POLICY_PASSWORD"
    echo $POLICY_LOGIN

    export POLICY_ROUTE=$(oc get routes -n $AIOPS_NAMESPACE policy-api -o jsonpath="{['spec']['host']}")
    echo $POLICY_ROUTE

    # echo "{{role_path}}/templates/policies/runbook-trigger-policy.json"

    export policyid=$(curl -XGET -k -s "https://$POLICY_ROUTE/policyregistry.ibm-netcool-prod.aiops.io/v1alpha/system/cfd95b7e-3bc7-4006-a4a8-a73a79c71255/"  \
      -H 'X-TenantID: cfd95b7e-3bc7-4006-a4a8-a73a79c71255' \
      -H 'content-type: application/json' \
      -u $POLICY_LOGIN|jq -r '.[] | select( .metadata | contains ("Default scope policy")) | .policyid')

      
    export result=$(curl -XDELETE -k -s "https://$POLICY_ROUTE/policyregistry.ibm-netcool-prod.aiops.io/v1alpha/system/cfd95b7e-3bc7-4006-a4a8-a73a79c71255/policies/$policyid"  \
      -H 'X-TenantID: cfd95b7e-3bc7-4006-a4a8-a73a79c71255' \
      -H 'content-type: application/json' \
      -u $POLICY_LOGIN \
      -d '{ "state": "enabled" }')


    echo $result
  ignore_errors: true
  register: POLICY_RESULT
  args:
    executable: /bin/bash


- name: 🟣 OUTPUT
  debug: 
    var: POLICY_RESULT.stdout_lines
    verbosity: 1

