

- name: 🛰️  START - INSTALL IBM AIOPS RUNBOOKS
  debug: 
    msg="{{ lookup('pipe','date +%d.%m.%Y---%H:%M:%S') }}"


- name: Log
  shell: |
    export MESSAGE="Load IBM AIOps Runbooks"
    export currentDate=$(date +%Y-%m-%d_%H:%M)
    echo "---------------------------------------------------------------------------------------------------------------------------------------------------" >> ../install_{{current_ibmaiops_feature.kind}}.log
    echo $currentDate" - "$MESSAGE  >> ../install_{{current_ibmaiops_feature.kind}}.log
  ignore_errors: true

- name: 📣 OCP CONSOLE - Create Openshift NOTIFICATION
  shell: |
    cat <<EOF | oc apply -f -
    apiVersion: console.openshift.io/v1
    kind: ConsoleNotification
    metadata:
      name: ibm-aiops-notification
    spec:
      backgroundColor: '#ffd500'
      color: '#000'
      location: {{global_config.position_ocp_notifications | default("BannerTop")}}
      text: 'Installing {{current_ibmaiops_feature.kind}} - Load IBM AIOps Runbooks'    
    EOF
  ignore_errors: true
  args:
    executable: /bin/bash
  when: global_config.create_ocp_notifications | default(true) == true  


- name: 🚀 RUNBOOKS - Get ZEN TOKEN
  shell: |
    export AIOPS_NAMESPACE=$(oc get po -A|grep aiops-orchestrator-controller |awk '{print$1}')
    ZEN_API_HOST=$(oc get route -n $AIOPS_NAMESPACE cpd -o jsonpath='{.spec.host}')
    ZEN_LOGIN_URL="https://${ZEN_API_HOST}/v1/preauth/signin"
    LOGIN_USER=admin
    LOGIN_PASSWORD="$(oc get secret admin-user-details -n $AIOPS_NAMESPACE -o jsonpath='{ .data.initial_admin_password }' | base64 --decode)"

    ZEN_LOGIN_RESPONSE=$(
    curl -k \
    -H 'Content-Type: application/json' \
    -XPOST \
    "${ZEN_LOGIN_URL}" \
    -d '{
          "username": "'"${LOGIN_USER}"'",
          "password": "'"${LOGIN_PASSWORD}"'"
    }' 2> /dev/null
    )

    ZEN_TOKEN=$(echo "${ZEN_LOGIN_RESPONSE}" | jq -r .token)
    #echo $ZEN_TOKEN

    export ROUTE=$(oc get route -n $AIOPS_NAMESPACE cpd -o jsonpath={.spec.host})
    echo "ROUTE: "$ROUTE
    export result=$(curl -X "GET" -k "https://$ROUTE/aiops/api/story-manager/rba/v1/runbooks" \
          -H "Authorization: bearer $ZEN_TOKEN" \
          -H 'Content-Type: application/json; charset=utf-8' )

    #echo "RESULT:"$result

    export RUNBOOK_ID=$(echo $result| sed 's/\\\\"/\"/g'|jq -r '.[]| select(.name|contains("Mitigate"))|._runbookId'| head -n 1)
    echo "RUNBOOK_ID: $RUNBOOK_ID"


    # Create Runbook Trigger Policy
    export POLICY_FILE="{{role_path}}/templates/policies/runbook-trigger-policy.json"
    cp $POLICY_FILE /tmp/runbook_policy.json
    cat /tmp/runbook_policy.json
    echo "RUNBOOK_ID: $RUNBOOK_ID"

    sed -i -e "s/MY_RUNBOOK_ID/$RUNBOOK_ID/g" /tmp/runbook_policy.json
    cat /tmp/runbook_policy.json


  ignore_errors: true
  register: POLICY_RESULT
  args:
    executable: /bin/bash

- name: 🟣 OUTPUT
  debug: 
    var: POLICY_RESULT.stdout_lines
    verbosity: 1


