
# *************************************************************************************************************************************************
# --------------------------------------------------------------------------------------------------------------------------------------
# Connection Details
# --------------------------------------------------------------------------------------------------------------------------------------
# *************************************************************************************************************************************************

- name: 🛰️  START - CREATE MERGE RULE
  debug: 
    msg="{{ lookup('pipe','date +%d.%m.%Y---%H:%M:%S') }}"


- name: Log
  shell: |
    export MESSAGE="Create Topology Merge Rules"
    export currentDate=$(date +%Y-%m-%d_%H:%M)
    echo "---------------------------------------------------------------------------------------------------------------------------------------------------" >> ../install_{{current_ibmaiops_feature.kind}}.log
    echo $currentDate" - "$MESSAGE  >> ../install_{{current_ibmaiops_feature.kind}}.log
  ignore_errors: true

- name: 📣 OCP CONSOLE - Create Openshift NOTIFICATION
  shell: |
    cat <<EOF | oc apply -f -
    apiVersion: console.openshift.io/v1
    kind: ConsoleNotification
    metadata:
      name: ibm-aiops-notification
    spec:
      backgroundColor: '#ffd500'
      color: '#000'
      location: {{global_config.position_ocp_notifications | default("BannerTop")}}
      text: 'Installing {{current_ibmaiops_feature.kind}} - Create Topology Merge Rules'    
    EOF
  ignore_errors: true
  args:
    executable: /bin/bash
  when: global_config.create_ocp_notifications | default(true) == true  





# --------------------------------------------------------------------------------------------------------------------------------------
# AIOPS
# --------------------------------------------------------------------------------------------------------------------------------------
- name: 🚀 TOPOLOGY - CREATE BUSINESS CRITICALITIES
  shell: |
    set -x
        
    echo "Create CREATE BUSINESS CRITICALITIES"
    export AIOPS_NAMESPACE=$(oc get po -A|grep aiops-orchestrator-controller |awk '{print$1}')

    export TOPOLOGY_REST_USR=$(oc get secret aiops-topology-asm-credentials -n $AIOPS_NAMESPACE -o jsonpath='{.data.username}' | base64 --decode)
    export TOPOLOGY_REST_PWD=$(oc get secret aiops-topology-asm-credentials -n $AIOPS_NAMESPACE -o jsonpath='{.data.password}' | base64 --decode)
    # oc create route passthrough topology-manage -n $AIOPS_NAMESPACE --service=aiops-topology-topology --port=https-topology-api
    export TOPO_MGT_ROUTE="https://"$(oc get route -n $AIOPS_NAMESPACE aiops-topology-topology -o jsonpath={.spec.host})

 
    export LOGIN="$TOPOLOGY_REST_USR:$TOPOLOGY_REST_PWD"

    echo "    URL: $TOPO_MGT_ROUTE/1.0/topology/metadata"
    echo "    LOGIN: $LOGIN"

        
    curl -XPOST -k \
    "$TOPO_MGT_ROUTE/1.0/topology/metadata" \
    -H 'accept: application/json' \
    -H 'content-type: application/json' \
    -H 'X-TenantID: cfd95b7e-3bc7-4006-a4a8-a73a79c71255' \
    -u $LOGIN \
    -d '    {

      "name": "Platinum",
      "keyIndexName": "aiopsBusinessCriticalityMetadata::platinum",
      "description": "Platinum priority",
      "entityTypes": [
        "AIOPS_BUSINESS_CRITICALITY"
      ],
      "businessCriticalityValue": 100,
      "tags": [
        "ASM_UI_CONFIG"
      ]
    }'


    curl -XPOST -k \
    "$TOPO_MGT_ROUTE/1.0/topology/metadata" \
    -H 'accept: application/json' \
    -H 'content-type: application/json' \
    -H 'X-TenantID: cfd95b7e-3bc7-4006-a4a8-a73a79c71255' \
    -u $LOGIN \
    -d '    {

      "name": "Gold",
      "keyIndexName": "aiopsBusinessCriticalityMetadata::gold",
      "description": "Gold priority",
      "de   scription": "Gold priority",
      "entityTypes": [
        "AIOPS_BUSINESS_CRITICALITY"
      ],
      "businessCriticalityValue": 75,
      "tags": [
        "ASM_UI_CONFIG"
      ]
    }'

      curl -XPOST -k \
    "$TOPO_MGT_ROUTE/1.0/topology/metadata" \
    -H 'accept: application/json' \
    -H 'content-type: application/json' \
    -H 'X-TenantID: cfd95b7e-3bc7-4006-a4a8-a73a79c71255' \
    -u $LOGIN \
    -d '    {

      "name": "Silver",
      "keyIndexName": "aiopsBusinessCriticalityMetadata::silver",
      "description": "Silver priority",
      "entityTypes": [
        "AIOPS_BUSINESS_CRITICALITY"
      ],
      "businessCriticalityValue": 50,
      "tags": [
        "ASM_UI_CONFIG"
      ]
    }'


    curl -XPOST -k \
    "$TOPO_MGT_ROUTE/1.0/topology/metadata" \
    -H 'accept: application/json' \
    -H 'content-type: application/json' \
    -H 'X-TenantID: cfd95b7e-3bc7-4006-a4a8-a73a79c71255' \
    -u $LOGIN \
    -d '    {

      "name": "Bronze",
      "keyIndexName": "aiopsBusinessCriticalityMetadata::bronze",
      "description": "Bronze priority",
      "entityTypes": [
        "AIOPS_BUSINESS_CRITICALITY"
      ],
      "businessCriticalityValue": 25,
      "tags": [
        "ASM_UI_CONFIG"
      ]
    }'

    curl -XPOST -k \
    "$TOPO_MGT_ROUTE/1.0/topology/metadata" \
    -H 'accept: application/json' \
    -H 'content-type: application/json' \
    -H 'X-TenantID: cfd95b7e-3bc7-4006-a4a8-a73a79c71255' \
    -u $LOGIN \
    -d '    {

      "name": "Bronze",
      "keyIndexName": "aiopsBusinessCriticalityMetadata::none",
      "description": "Lowes priority",
      "entityTypes": [
        "AIOPS_BUSINESS_CRITICALITY"
      ],
      "businessCriticalityValue": 1,
      "tags": [
        "ASM_UI_CONFIG"
      ]
    }'
  register: output_string
  ignore_errors: true
  args:
    executable: /bin/bash




# --------------------------------------------------------------------------------------------------------------------------------------
# AIOPS
# --------------------------------------------------------------------------------------------------------------------------------------
- name: 🚀 TOPOLOGY - CREATE MERGE RULES
  shell: |
    set -x
    
    echo "Create Rules - Starting..."
    
    export AIOPS_NAMESPACE=$(oc get po -A|grep aiops-orchestrator-controller |awk '{print$1}')

    export TOPOLOGY_REST_USR=$(oc get secret aiops-topology-asm-credentials -n $AIOPS_NAMESPACE -o jsonpath='{.data.username}' | base64 --decode)
    export TOPOLOGY_REST_PWD=$(oc get secret aiops-topology-asm-credentials -n $AIOPS_NAMESPACE -o jsonpath='{.data.password}' | base64 --decode)
    export LOGIN="$TOPOLOGY_REST_USR:$TOPOLOGY_REST_PWD"

    #oc delete route  topology-merge -n $AIOPS_NAMESPACE
    # oc create route passthrough topology-merge -n $AIOPS_NAMESPACE --insecure-policy="Redirect" --service=aiops-topology-merge --port=https-merge-api
    export MERGE_ROUTE="https://"$(oc get route -n $AIOPS_NAMESPACE aiops-topology-merge -o jsonpath={.spec.host})


    echo "    URL: $MERGE_ROUTE/1.0/merge/"
    echo "    LOGIN: $LOGIN"


    echo "  Wait 5 seconds"
    sleep 5

    echo "  Create Match RULE... MatchTokenDeployName"
    curl -X "POST" "$MERGE_ROUTE/1.0/merge/rules" --insecure \
        -H 'X-TenantID: cfd95b7e-3bc7-4006-a4a8-a73a79c71255' \
        -H 'content-type: application/json' \
        -u $LOGIN \
        -d $'{
        "name": "MatchTokenDeployName",
        "ruleType": "matchTokensRule",
        "entityTypes": ["deployment"],
        "tokens": ["name"],
        "ruleStatus": "enabled",
        "observers": ["*"],
        "providers": ["*"]
    }'

    echo "  Create Merge RULE... MergeTokenDeployName"
    curl -X "POST" "$MERGE_ROUTE/1.0/merge/rules" --insecure \
        -H 'X-TenantID: cfd95b7e-3bc7-4006-a4a8-a73a79c71255' \
        -H 'content-type: application/json' \
        -u $LOGIN \
        -d $'{
        "name": "MergeTokenDeployName",
        "ruleType": "mergeRule",
        "entityTypes": ["deployment","statefulset","container","router"],
        "tokens": ["name"],
        "ruleStatus": "enabled",
        "observers": ["*"],
        "providers": ["*"]
    }'

    echo "  Create Match RULE... MergeTokenDeployName"
    curl -X "POST" "$MERGE_ROUTE/1.0/merge/rules" --insecure \
        -H 'X-TenantID: cfd95b7e-3bc7-4006-a4a8-a73a79c71255' \
        -H 'content-type: application/json' \
        -u $LOGIN \
        -d $'{
        "name": "MatchTokenNetworkinterfacesID",
        "ruleType": "mergeRule",
        "entityTypes": ["networkinterface"],
        "tokens": ["uniqueId"],
        "ruleStatus": "enabled",
        "observers": ["*"],
        "providers": ["*"]
    }'

    echo "  Disable RULE k8ServiceName..."

    export RULE_ID=$(curl "$MERGE_ROUTE/1.0/merge/rules?ruleType=matchTokensRule&_filter=name=k8ServiceName&_include_count=false&_field=*" -s --insecure \
        -H 'X-TenantID: cfd95b7e-3bc7-4006-a4a8-a73a79c71255' \
        -u $LOGIN| jq -r "._items[0]._id")



    curl -XPUT "$MERGE_ROUTE/1.0/merge/rules/$RULE_ID" -s --insecure \
        --header 'Content-Type: application/json' \
        --header 'X-TenantID: cfd95b7e-3bc7-4006-a4a8-a73a79c71255' \
        -u $LOGIN \
        -d '{
          "name": "k8ServiceName",
          "keyIndexName": "k8ServiceName",
          "ruleType": "matchTokensRule",
          "entityTypes": [
            "service"
          ],
          "tokens": [
            "name"
          ],
          "ruleStatus": "disabled",
          
          "observers": [
            "kubernetes-observer"
          ],
          "providers": [
            "*"
          ]
        }' 


    echo "  Disable RULE instana-observer-events-kubernetes-service..."

    export RULE_ID=$(curl "$MERGE_ROUTE/1.0/merge/rules?ruleType=matchTokensRule&_filter=name=instana-observer-events-kubernetes-service&_include_count=false&_field=*" -s --insecure \
        -H 'X-TenantID: cfd95b7e-3bc7-4006-a4a8-a73a79c71255' \
        -u $LOGIN| jq -r "._items[0]._id")



    curl -XPUT "$MERGE_ROUTE/1.0/merge/rules/$RULE_ID" -s --insecure \
        --header 'Content-Type: application/json' \
        --header 'X-TenantID: cfd95b7e-3bc7-4006-a4a8-a73a79c71255' \
        -u $LOGIN \
        -d '{
          "name": "k8ServiceName",
          "keyIndexName": "k8ServiceName",
          "ruleType": "matchTokensRule",
          "entityTypes": [
            "service"
          ],
          "tokens": [
            "name"
          ],
          "ruleStatus": "disabled",
          
          "observers": [
            "kubernetes-observer"
          ],
          "providers": [
            "*"
          ]
        }' 



  register: output_string
  ignore_errors: true
  args:
    executable: /bin/bash



