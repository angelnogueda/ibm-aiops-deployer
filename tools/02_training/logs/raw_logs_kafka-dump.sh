#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#         ________  __  ___     ___    ________       
#        /  _/ __ )/  |/  /    /   |  /  _/ __ \____  _____
#        / // __  / /|_/ /    / /| |  / // / / / __ \/ ___/
#      _/ // /_/ / /  / /    / ___ |_/ // /_/ / /_/ (__  ) 
#     /___/_____/_/  /_/    /_/  |_/___/\____/ .___/____/  
#                                           /_/
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#---------------------------------------------------------------------------------------------------------------------------------------------------"
#  IBMAIOPS - Monitor Kafka Topics
#
#
#  ©2024 nikh@ch.ibm.com
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
clear

echo "***************************************************************************************************************************************************"
echo "***************************************************************************************************************************************************"
echo "***************************************************************************************************************************************************"
echo "***************************************************************************************************************************************************"
echo "  "
echo "  🚀 IBM AIOps -Dump Raw Logs from Kafka Topics"
echo "  "
echo "***************************************************************************************************************************************************"
echo "***************************************************************************************************************************************************"
echo "***************************************************************************************************************************************************"
echo "  "
echo "  "
export TEMP_PATH=training-files-logs-dump

mkdir /tmp/$TEMP_PATH/  >/tmp/demo.log 2>&1 
rm -f -r /tmp/$TEMP_PATH/* 


export AIOPS_NAMESPACE=$(oc get po -A|grep aiops-orchestrator-controller |awk '{print$1}')

export LOG_TYPE=elk   # humio, elk, splunk, ...
export EVENT_TYPE=noi   # humio, elk, splunk, ...



echo "  Initializing......"
if [ -x "$(command -v kafkacat)" ]; then
    export KAFKACAT_EXE=kafkacat
else
    if [ -x "$(command -v kcat)" ]; then
        export KAFKACAT_EXE=kcat
    else
        echo "      ❗ ERROR: kafkacat/kcat is not installed."
        echo "      ❌ Aborting..."
        exit 1
    fi
fi

  oc extract secret/kafka-secrets -n $AIOPS_NAMESPACE --keys=ca.crt --confirm
  export KAFKA_SECRET=$(oc get secret -n $AIOPS_NAMESPACE |grep 'aiops-kafka-secret'|awk '{print$1}')

  export SASL_USER=$(oc get secret $KAFKA_SECRET -n $AIOPS_NAMESPACE --template={{.data.username}} | base64 --decode)
  export SASL_PASSWORD=$(oc get secret $KAFKA_SECRET -n $AIOPS_NAMESPACE --template={{.data.password}} | base64 --decode)
  export BROKER=$(oc get routes iaf-system-kafka-0 -n $AIOPS_NAMESPACE -o=jsonpath='{.status.ingress[0].host}{"\n"}'):443



echo "***************************************************************************************************************************************************"
echo "  "

export LOGS_TOPIC=$(oc get kafkatopics.ibmevents.ibm.com -n $AIOPS_NAMESPACE | grep '\-raw'| awk '{print $1;}')


echo "***************************************************************************************************************************************************"
echo "Exporting LOGS_TOPIC: $LOGS_TOPIC"

echo "">/tmp/raw-logs-kafka.json

oc get kafkatopic -n $AIOPS_NAMESPACE
read -p "Press Enter to start"

${KAFKACAT_EXE} -v -X security.protocol=SASL_SSL -X ssl.ca.location=./ca.crt -X sasl.mechanisms=SCRAM-SHA-512 -X sasl.username=$SASL_USER -X sasl.password=$SASL_PASSWORD -b $BROKER -C -t $LOGS_TOPIC>>/tmp/$TEMP_PATH/raw-logs-kafka.json


echo "Dump Lines:"$(cat /tmp/$TEMP_PATH/raw-logs-kafka.json|wc -l)

cd /tmp/$TEMP_PATH/ 
split -l 1500 -a 6 ./raw-logs-kafka.json 
export NUM_FILES=$(ls | wc -l)
echo "NUM_FILES"$NUM_FILES
cd -



