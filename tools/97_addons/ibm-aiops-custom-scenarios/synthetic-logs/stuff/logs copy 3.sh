#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#         ________  __  ___     ___    ________       
#        /  _/ __ )/  |/  /    /   |  /  _/ __ \____  _____
#        / // __  / /|_/ /    / /| |  / // / / / __ \/ ___/
#      _/ // /_/ / /  / /    / ___ |_/ // /_/ / /_/ (__  ) 
#     /___/_____/_/  /_/    /_/  |_/___/\____/ .___/____/  
#                                           /_/
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#---------------------------------------------------------------------------------------------------------------------------------------------------"
#  Train on Log Templates
#
#  CloudPak for AIOps
#
#  ¬©2024 nikh@ch.ibm.com
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"




export entityIDString="kubernetes.container_name"
export messagePayloadString="message"




#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# DO NOT MODIFY BELOW
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
clear

echo ""
echo ""
echo ""
echo ""
echo ""
echo "         ________  __  ___     ___    ________       "     
echo "        /  _/ __ )/  |/  /    /   |  /  _/ __ \____  _____"
echo "        / // __  / /|_/ /    / /| |  / // / / / __ \/ ___/"
echo "      _/ // /_/ / /  / /    / ___ |_/ // /_/ / /_/ (__  ) "
echo "     /___/_____/_/  /_/    /_/  |_/___/\____/ .___/____/  "
echo "                                           /_/            "
echo ""
echo ""
echo ""
echo "***************************************************************************************************************************************************"
echo "***************************************************************************************************************************************************"
echo ""
echo " üöÄ  Train on Log Templates"
echo ""
echo "***************************************************************************************************************************************************"
echo "***************************************************************************************************************************************************"
echo ""

echo "  üì¶ Parameters"
echo ""

echo "       entityIDString:         $entityIDString"
echo "       messagePayloadString:   $messagePayloadString"

export WORKING_DIR_LOGS=./templates/logs

echo ""
echo ""

echo "  üì¶ Template File"

templateFile=$(<$WORKING_DIR_LOGS/template.tpl)
echo $templateFile|jq | sed 's/^/          /'

echo "">/tmp/logs.json


echo ""
echo "--------------------------------------------------------------------------------------------------"
echo "  üì¶ Creating Template File"

currentLine=0

for actFile in $(ls -1 $WORKING_DIR_LOGS | grep "log");
do
    totalLines=$(cat $WORKING_DIR_LOGS/$actFile|wc -l| tr -d ' ')
    #echo $actFile
    export componentName=${actFile%.*}
    echo ""
    echo "   --------------------------------------------------------------------------------------------------"
    echo "     üõ†Ô∏è Treating File: $componentName"

      if [[ $actFile =~ ".log" ]] ;
      then
        while IFS= read -r line
        do
         ((currentLine++))
          #echo $line| sed 's/\\"/@@@@/g'| sed 's/\\/!!!!!!/g'|jq 
          #echo "${line//\\/\\\\}" |jq 
          
          entityID=$(jq -r ".$entityIDString" <<< "$line")
          #echo $entityID
          echo "         üå∂Ô∏è Component ($currentLine/$totalLines): $entityID"

          if [[ ! -z $entityID ]] ;
          then
            messagePayload=$(echo $line | sed 's/\\"/@@@@/g'| sed 's/\\/!!!!!!/g'| jq ".$messagePayloadString")

            #messagePayload=$(jq ".$messagePayloadString" <<< "$line")
            #echo $messagePayload
            #echo $templateFile | sed "s^{{entityID}}^$entityID^"| sed "s^{{messagePayload}}^$messagePayload^"   >>/tmp/logs.json
            echo $templateFile | sed "s^{{entityID}}^$entityID^g"| sed "s^{{messagePayload}}^$messagePayload^g" | sed 's/\"\"/\"/g'  >>/tmp/logs.json
            #echo "${templateFile//@@entityID@@/$entityID}"


            #echo $templateFile | sed "s/{{entityID}}/$entityID/"| sed "s&{{messagePayload}}&${messagePayload}&"  #>>/tmp/logs.json
            #echo $line |jq ".$entityID"


            #echo "${line//\\\\/\\\\\\}" |jq ".$entityID"
            #echo $line|jq ".$entityID"

            #echo $line|jq ".$messagePayload"
          fi
        done < "$WORKING_DIR_LOGS/$actFile"





      fi
done

      gsed -i 's/@@@@/\\\"/g' /tmp/logs.json


      echo ""
      echo ""
      echo ""
      echo ""
      echo "--------------------------------------------------------------------------------------------------"
      echo "--------------------------------------------------------------------------------------------------"
      echo "--------------------------------------------------------------------------------------------------"
      echo "  ‚ù§Ô∏è‚Äçü©π Entity Count"
      echo ""
      cat /tmp/logs.json|jq '.["kubernetes"].container_name' | sort | uniq -c
      echo ""
      echo ""
      echo ""
      echo "--------------------------------------------------------------------------------------------------"
      echo "  üë®‚Äçüé§ Entity Example"
      echo ""
      head -n 2 /tmp/logs.json|jq | sed 's/^/          /'

      echo ""
      echo ""
      echo "***************************************************************************************************************************************************"
      echo "***************************************************************************************************************************************************"
      echo "  ‚úÖ DONE"
      echo "***************************************************************************************************************************************************"
      echo "***************************************************************************************************************************************************"


exit 1


            COUNTER=$((COUNTER+1))
            EVENTS_SECONDS=$((EVENTS_SECONDS+1))
            EVENTS_SECONDS=$((EVENTS_SECONDS+60))
            EVENTS_SECONDS_SKEW="-v+"$EVENTS_SECONDS"S"

            # Get timestamp in ELK format
            export my_timestamp=$(date $EVENTS_SECONDS_SKEW $DATE_FORMAT_EVENTS)".000Z"
            export myID=$(date "+%s")$COUNTER

            #echo "aaaaa: "$myID
            # Replace in line
            line=${line//MY_TIMESTAMP/$my_timestamp}
            line=${line//MY_ID/$myID}
            line=${line//\"/\\\"}

            #echo "       Q:$myID"

            export c_string=$(echo "curl \"https://$DATALAYER_ROUTE/irdatalayer.aiops.io/active/v1/events\" --insecure -s  -X POST -u \"${USER_PASS}\" -H 'Content-Type: application/json' -H 'x-username:admin' -H 'x-subscription-id:cfd95b7e-3bc7-4006-a4a8-a73a79c71255' -d \"${line}\"")
            #echo "       Q:$c_string"
            export result=$(eval $c_string)
            #export result=$(curl "https://$DATALAYER_ROUTE/irdatalayer.aiops.io/active/v1/events" --insecure --silent -X POST -u "${USER_PASS}" -H 'Content-Type: application/json' -H "x-username:admin" -H "x-subscription-id:cfd95b7e-3bc7-4006-a4a8-a73a79c71255" -d "${line}")
            myId=$(echo $result|jq ".deduplicationKey")
            echo "              DONE:$myId"
            #echo "       DONE:$result"
