---
# Source: falco/charts/falcosidekick/templates/rbac-ui.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: falco-falcosidekick-ui
  namespace: falco
  labels:
    app.kubernetes.io/name: falcosidekick-ui
    helm.sh/chart: falcosidekick-0.5.9
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
---
# Source: falco/charts/falcosidekick/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: falco-falcosidekick
  namespace: falco
  labels:
    app.kubernetes.io/name: falcosidekick
    helm.sh/chart: falcosidekick-0.5.9
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
---
# Source: falco/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: falco
  namespace: falco
  labels:
    helm.sh/chart: falco-2.4.3
    app.kubernetes.io/name: falco
    app.kubernetes.io/instance: falco
    app.kubernetes.io/version: "0.33.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: falco/charts/falcosidekick/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: falco-falcosidekick
  namespace: falco
  labels:
    app.kubernetes.io/name: falcosidekick
    helm.sh/chart: falcosidekick-0.5.9
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  # Slack Output
  SLACK_WEBHOOKURL: ""
  SLACK_OUTPUTFORMAT: "YWxs"
  SLACK_FOOTER: ""
  SLACK_ICON: ""
  SLACK_USERNAME: ""
  SLACK_MINIMUMPRIORITY: ""
  SLACK_MESSAGEFORMAT: ""

  # RocketChat Output
  ROCKETCHAT_WEBHOOKURL: ""
  ROCKETCHAT_OUTPUTFORMAT: "YWxs"
  ROCKETCHAT_ICON: ""
  ROCKETCHAT_USERNAME: ""
  ROCKETCHAT_MINIMUMPRIORITY: ""
  ROCKETCHAT_MESSAGEFORMAT: ""
  ROCKETCHAT_MUTUALTLS: "ZmFsc2U="
  ROCKETCHAT_CHECKCERT: "dHJ1ZQ=="

  # Mattermost Output
  MATTERMOST_WEBHOOKURL: ""
  MATTERMOST_OUTPUTFORMAT: "YWxs"
  MATTERMOST_FOOTER: ""
  MATTERMOST_ICON: ""
  MATTERMOST_USERNAME: ""
  MATTERMOST_MINIMUMPRIORITY: ""
  MATTERMOST_MESSAGEFORMAT: ""
  MATTERMOST_MUTUALTLS: "ZmFsc2U="
  MATTERMOST_CHECKCERT: "dHJ1ZQ=="

  # Teams Output
  TEAMS_WEBHOOKURL: ""
  TEAMS_OUTPUTFORMAT: "YWxs"
  TEAMS_ACTIVITYIMAGE: ""
  TEAMS_MINIMUMPRIORITY: ""

  # Datadog Output
  DATADOG_APIKEY: ""
  DATADOG_HOST: ""
  DATADOG_MINIMUMPRIORITY: ""

  # AlertManager Output
  ALERTMANAGER_HOSTPORT: ""
  ALERTMANAGER_ENDPOINT: "L2FwaS92MS9hbGVydHM="
  ALERTMANAGER_EXPIRESAFTER: ""
  ALERTMANAGER_MINIMUMPRIORITY: ""
  ALERTMANAGER_MUTUALTLS: "ZmFsc2U="
  ALERTMANAGER_CHECKCERT: "dHJ1ZQ=="

  # InfluxDB Output
  INFLUXDB_USER: ""
  INFLUXDB_PASSWORD: ""
  INFLUXDB_HOSTPORT: ""
  INFLUXDB_MINIMUMPRIORITY: ""
  INFLUXDB_DATABASE: "ZmFsY28="
  INFLUXDB_MUTUALTLS: "ZmFsc2U="
  INFLUXDB_CHECKCERT: "dHJ1ZQ=="

  # AWS Output
  AWS_ACCESSKEYID: ""
  AWS_SECRETACCESSKEY: ""
  AWS_REGION: ""
  AWS_LAMBDA_FUNCTIONNAME: ""
  AWS_LAMBDA_MINIMUMPRIORITY: ""
  AWS_CLOUDWATCHLOGS_LOGGROUP: ""
  AWS_CLOUDWATCHLOGS_LOGSTREAM: ""
  AWS_CLOUDWATCHLOGS_MINIMUMPRIORITY: ""
  AWS_SNS_TOPICARN: ""
  AWS_SNS_RAWJSON: "ZmFsc2U="
  AWS_SNS_MINIMUMPRIORITY: ""
  AWS_SQS_URL: ""
  AWS_SQS_MINIMUMPRIORITY: ""
  AWS_S3_BUCKET: ""
  AWS_S3_PREFIX: ""
  AWS_S3_MINIMUMPRIORITY: ""
  AWS_KINESIS_STREAMNAME: ""
  AWS_KINESIS_MINIMUMPRIORITY: ""

  # SMTP Output
  SMTP_USER: ""
  SMTP_PASSWORD: ""
  SMTP_HOSTPORT: ""
  SMTP_FROM: ""
  SMTP_TO: ""
  SMTP_OUTPUTFORMAT: "aHRtbA=="
  SMTP_MINIMUMPRIORITY: ""

  # OpsGenie Output
  OPSGENIE_APIKEY: ""
  OPSGENIE_REGION: ""
  OPSGENIE_MINIMUMPRIORITY: ""
  OPSGENIE_MUTUALTLS: "ZmFsc2U="
  OPSGENIE_CHECKCERT: "dHJ1ZQ=="

  # Discord Output
  DISCORD_WEBHOOKURL: ""
  DISCORD_ICON: ""
  DISCORD_MINIMUMPRIORITY: ""

  # GCP Output
  GCP_CREDENTIALS: ""
  GCP_PUBSUB_PROJECTID: ""
  GCP_PUBSUB_TOPIC: ""
  GCP_PUBSUB_MINIMUMPRIORITY: ""
  GCP_STORAGE_BUCKET: ""
  GCP_STORAGE_PREFIX: ""
  GCP_STORAGE_MINIMUMPRIORITY: "ZGVidWc="
  GCP_CLOUDFUNCTIONS_NAME: ""
  GCP_CLOUDFUNCTIONS_MINIMUMPRIORITY: ""
  GCP_CLOUDRUN_ENDPOINT: ""
  GCP_CLOUDRUN_JWT: ""
  GCP_CLOUDRUN_MINIMUMPRIORITY: ""

  # GoogleChat Output
  GOOGLECHAT_WEBHOOKURL: ""
  GOOGLECHAT_OUTPUTFORMAT: "YWxs"
  GOOGLECHAT_MINIMUMPRIORITY: ""
  GOOGLECHAT_MESSAGEFORMAT: ""

  # ElasticSearch Output
  ELASTICSEARCH_HOSTPORT: ""
  ELASTICSEARCH_INDEX: "ZmFsY28="
  ELASTICSEARCH_TYPE: "ZXZlbnQ="
  ELASTICSEARCH_MINIMUMPRIORITY: ""
  ELASTICSEARCH_MUTUALTLS: "ZmFsc2U="
  ELASTICSEARCH_CHECKCERT: "dHJ1ZQ=="
  ELASTICSEARCH_USERNAME: ""
  ELASTICSEARCH_PASSWORD: ""

  # Loki Output
  LOKI_HOSTPORT: ""
  LOKI_ENDPOINT: "L2FwaS9wcm9tL3B1c2g="
  LOKI_TENANT: ""
  LOKI_EXTRALABELS: ""
  LOKI_MINIMUMPRIORITY: ""
  LOKI_MUTUALTLS: "ZmFsc2U="
  LOKI_CHECKCERT: "dHJ1ZQ=="

  # Prometheus Output
  PROMETHEUS_EXTRALABELS: ""

  # Nats Output
  NATS_HOSTPORT: ""
  NATS_MINIMUMPRIORITY: ""
  NATS_MUTUALTLS: "ZmFsc2U="
  NATS_CHECKCERT: "dHJ1ZQ=="

  # Stan Output
  STAN_HOSTPORT: ""
  STAN_CLUSTERID: ""
  STAN_CLIENTID: ""
  STAN_MINIMUMPRIORITY: ""
  STAN_MUTUALTLS: "ZmFsc2U="
  STAN_CHECKCERT: "dHJ1ZQ=="

  # Statsd
  STATSD_FORWARDER: ""
  STATSD_NAMESPACE: "ZmFsY29zaWRla2ljay4="

  # Dogstatsd
  DOGSTATSD_FORWARDER: ""
  DOGSTATSD_NAMESPACE: "ZmFsY29zaWRla2ljay4="
  DOGSTATSD_TAGS: ""

  # WebHook Output
  WEBHOOK_ADDRESS: "aHR0cHM6Ly93ZWJob29rLnNpdGUvZjVjMDY1YTktMzVkMC00YjhkLTk0NDItZWQ2YTA4YjY4OGE2"
  WEBHOOK_CUSTOMHEADERS: ""
  WEBHOOK_MINIMUMPRIORITY: ""
  WEBHOOK_MUTUALTLS: "ZmFsc2U="
  WEBHOOK_CHECKCERT: "dHJ1ZQ=="

  # Azure Output
  AZURE_EVENTHUB_NAME: ""
  AZURE_EVENTHUB_NAMESPACE: ""
  AZURE_EVENTHUB_MINIMUMPRIORITY: ""

  # Kafka Output
  KAFKA_HOSTPORT: ""
  KAFKA_TOPIC: ""
  KAFKA_MINIMUMPRIORITY: ""

  # PagerDuty Output
  PAGERDUTY_ROUTINGKEY: ""
  PAGERDUTY_MINIMUMPRIORITY: ""

  # Kubeless Output
  KUBELESS_FUNCTION: ""
  KUBELESS_NAMESPACE: ""
  KUBELESS_PORT: "ODA4MA=="
  KUBELESS_MINIMUMPRIORITY: ""
  KUBELESS_MUTUALTLS: "ZmFsc2U="
  KUBELESS_CHECKCERT: "dHJ1ZQ=="

  # OpenFaaS
  OPENFAAS_GATEWAYNAMESPACE: "b3BlbmZhYXM="
  OPENFAAS_GATEWAYSERVICE: "Z2F0ZXdheQ=="
  OPENFAAS_FUNCTIONNAME: ""
  OPENFAAS_FUNCTIONNAMESPACE: "b3BlbmZhYXMtZm4="
  OPENFAAS_GATEWAYPORT: "ODA4MA=="
  OPENFAAS_MINIMUMPRIORITY: ""
  OPENFAAS_MUTUALTLS: "ZmFsc2U="
  OPENFAAS_CHECKCERT: "dHJ1ZQ=="

  # Cloud Events Output
  CLOUDEVENTS_ADDRESS: ""
  CLOUDEVENTS_EXTENSION: ""
  CLOUDEVENTS_MINIMUMPRIORITY: ""

  # RabbitMQ Output
  RABBITMQ_URL: ""
  RABBITMQ_QUEUE: ""
  RABBITMQ_MINIMUMPRIORITY: "ZGVidWc="

  # Wavefront Output
  WAVEFRONT_ENDPOINTTYPE: ""
  WAVEFRONT_ENDPOINTHOST: ""
  WAVEFRONT_ENDPOINTTOKEN: ""
  WAVEFRONT_ENDPOINTMETRICPORT: "Mjg3OA=="
  WAVEFRONT_FLUSHINTERVALSECONDS: "MQ=="
  WAVEFRONT_BATCHSIZE: "MTAwMDA="
  WAVEFRONT_METRICNAME: "ZmFsY28uYWxlcnQ="
  WAVEFRONT_MINIMUMPRIORITY: "ZGVidWc="

  # Grafana Output
  GRAFANA_HOSTPORT: ""
  GRAFANA_APIKEY: ""
  GRAFANA_DASHBOARDID: ""
  GRAFANA_PANELID: ""
  GRAFANA_ALLFIELDSASTAGS: "ZmFsc2U="
  GRAFANA_MUTUALTLS: "ZmFsc2U="
  GRAFANA_CHECKCERT: "dHJ1ZQ=="
  GRAFANA_MINIMUMPRIORITY: ""

  # Fission Output
  FISSION_FUNCTION: ""
  FISSION_ROUTERNAMESPACE: "Zmlzc2lvbg=="
  FISSION_ROUTERSERVICE: "cm91dGVy"
  FISSION_ROUTERPORT: "ODA="
  FISSION_MINIMUMPRIORITY: ""
  FISSION_MUTUALTLS: "ZmFsc2U="
  FISSION_CHECKCERT: "dHJ1ZQ=="

  # Yandex Output
  YANDEX_ACCESSKEYID:  ""
  YANDEX_SECRETACCESSKEY: ""
  YANDEX_REGION: ""
  YANDEX_S3_ENDPOINT: ""
  YANDEX_S3_BUCKET: ""
  YANDEX_S3_PREFIX: ""
  YANDEX_S3_MINIMUMPRIORITY: ""

  # KafkaRest Output
  KAFKAREST_ADDRESS: ""
  KAFKAREST_VERSION: "Mg=="
  KAFKAREST_MINIMUMPRIORITY : ""
  KAFKAREST_MUTUALTLS : "ZmFsc2U="
  KAFKAREST_CHECKCERT : "dHJ1ZQ=="

  # Syslog
  SYSLOG_HOST: ""
  SYSLOG_PORT: ""
  SYSLOG_PROTOCOL: "dGNw"
  SYSLOG_MINIMUMPRIORITY : ""

  # Zoho Cliq
  CLIQ_WEBHOOKURL: ""
  CLIQ_ICON: ""
  CLIQ_USEEMOJI: "dHJ1ZQ=="
  CLIQ_OUTPUTFORMAT: "YWxs"
  CLIQ_MESSAGEFORMAT: ""
  CLIQ_MINIMUMPRIORITY : ""

  # Policy Reporter
  POLICYREPORT_ENABLED: "ZmFsc2U="
  POLICYREPORT_KUBECONFIG: "fi8ua3ViZS9jb25maWc="
  POLICYREPORT_MAXEVENTS: "MTAwMA=="
  POLICYREPORT_PRUNEBYPRIORITY: "ZmFsc2U="
  POLICYREPORT_MINIMUMPRIORITY : ""

  # WebUI Output
  WEBUI_URL: "aHR0cDovL2ZhbGNvLWZhbGNvc2lkZWtpY2stdWk6MjgwMg=="
---
# Source: falco/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: falco
  labels:
    helm.sh/chart: falco-2.4.3
    app.kubernetes.io/name: falco
    app.kubernetes.io/instance: falco
    app.kubernetes.io/version: "0.33.1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - extensions
      - ""
    resources:
      - nodes
      - namespaces
      - pods
      - replicationcontrollers
      - replicasets
      - services
      - daemonsets
      - deployments
      - events
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - deployments
      - replicasets
      - statefulsets
    verbs:
      - get
      - list
      - watch
  - nonResourceURLs:
      - /healthz
      - /healthz/*
    verbs:
      - get
---
# Source: falco/templates/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: falco
  labels:
    helm.sh/chart: falco-2.4.3
    app.kubernetes.io/name: falco
    app.kubernetes.io/instance: falco
    app.kubernetes.io/version: "0.33.1"
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: falco
    namespace: falco
roleRef:
  kind: ClusterRole
  name: falco
  apiGroup: rbac.authorization.k8s.io
---
# Source: falco/charts/falcosidekick/templates/rbac-ui.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: falco-falcosidekick-ui
  namespace: falco
  labels:
    app.kubernetes.io/name: falcosidekick-ui
    helm.sh/chart: falcosidekick-0.5.9
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
rules: []
---
# Source: falco/charts/falcosidekick/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: falco-falcosidekick
  namespace: falco
  labels:
    app.kubernetes.io/name: falcosidekick
    helm.sh/chart: falcosidekick-0.5.9
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
    - ""
  resources:
    - endpoints
  verbs:
    - get
---
# Source: falco/charts/falcosidekick/templates/rbac-ui.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: falco-falcosidekick-ui
  namespace: falco
  labels:
    app.kubernetes.io/name: falcosidekick-ui
    helm.sh/chart: falcosidekick-0.5.9
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: falco-falcosidekick-ui
subjects:
- kind: ServiceAccount
  name: falco-falcosidekick-ui
---
# Source: falco/charts/falcosidekick/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: falco-falcosidekick
  namespace: falco
  labels:
    app.kubernetes.io/name: falcosidekick
    helm.sh/chart: falcosidekick-0.5.9
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: falco-falcosidekick
subjects:
- kind: ServiceAccount
  name: falco-falcosidekick
---
# Source: falco/charts/falcosidekick/templates/service-ui.yaml
apiVersion: v1
kind: Service
metadata:
  name: falco-falcosidekick-ui
  namespace: falco
  labels:
    app.kubernetes.io/name: falcosidekick-ui
    helm.sh/chart: falcosidekick-0.5.9
    app.kubernetes.io/instance: falco-ui
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 2802
         
      targetPort: 2802
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: falcosidekick-ui
    app.kubernetes.io/instance: falco-ui
---
# Source: falco/charts/falcosidekick/templates/service-ui.yaml
apiVersion: v1
kind: Service
metadata:
  name: falco-falcosidekick-ui-redis
  namespace: falco
  labels:
    app.kubernetes.io/name: falcosidekick-ui-redis
    helm.sh/chart: falcosidekick-0.5.9
    app.kubernetes.io/instance: falco-ui
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 6379
      targetPort: 6379
      protocol: TCP
      name: redis
  selector:
    app.kubernetes.io/name: falcosidekick-ui-redis
    app.kubernetes.io/instance: falco-ui-redis
---
# Source: falco/charts/falcosidekick/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: falco-falcosidekick
  namespace: falco
  labels:
    app.kubernetes.io/name: falcosidekick
    helm.sh/chart: falcosidekick-0.5.9
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 2801
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: falcosidekick
    app.kubernetes.io/instance: falco
---
# Source: falco/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: falco
  namespace: falco
  labels:
    helm.sh/chart: falco-2.4.3
    app.kubernetes.io/name: falco
    app.kubernetes.io/instance: falco
    app.kubernetes.io/version: "0.33.1"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: falco
      app.kubernetes.io/instance: falco
  template:
    metadata:
      name: falco
      labels:
        app.kubernetes.io/name: falco
        app.kubernetes.io/instance: falco
      annotations:
        checksum/config: cabcaf621c09e1facc9e4b407bd5e95ed3f5bdf7b5532afc6df22e5e3d60fbf7
        checksum/rules: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
        checksum/certs: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
    spec:
      serviceAccountName: falco
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
      containers:
        - name: falco
          image: docker.io/falcosecurity/falco-no-driver:0.33.1
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 1000m
              memory: 1024Mi
            requests:
              cpu: 100m
              memory: 512Mi
          securityContext:
            privileged: true
          args:
            - /usr/bin/falco        
            - --cri
            - /run/containerd/containerd.sock
            - --cri
            - /run/crio/crio.sock
            - -K
            - /var/run/secrets/kubernetes.io/serviceaccount/token
            - -k
            - https://$(KUBERNETES_SERVICE_HOST)
            - --k8s-node
            - "$(FALCO_K8S_NODE_NAME)"
            - -pk
          env:
            - name: FALCO_K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: SKIP_DRIVER_LOADER
              value:
          tty: false
          livenessProbe:
            initialDelaySeconds: 60
            timeoutSeconds: 5
            periodSeconds: 15
            httpGet:
              path: /healthz
              port: 8765
          readinessProbe:
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 15
            httpGet:
              path: /healthz
              port: 8765
          volumeMounts:
            - mountPath: /root/.falco
              name: root-falco-fs
            - mountPath: /host/proc
              name: proc-fs
            - mountPath: /host/dev
              name: dev-fs
              readOnly: true
            - name: sys-fs
              mountPath: /sys/module/falco
            - mountPath: /host/var/run/docker.sock
              name: docker-socket
            - mountPath: /host/run/containerd/containerd.sock
              name: containerd-socket
            - mountPath: /host/run/crio/crio.sock
              name: crio-socket
            - mountPath: /etc/falco
              name: config-volume
            
      initContainers:
        - name: falco-driver-loader
          image: docker.io/falcosecurity/falco-driver-loader:0.33.1
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /root/.falco
              name: root-falco-fs
            - mountPath: /host/proc
              name: proc-fs
              readOnly: true
            - mountPath: /host/boot
              name: boot-fs
              readOnly: true
            - mountPath: /host/lib/modules
              name: lib-modules
            - mountPath: /host/usr
              name: usr-fs
              readOnly: true
            - mountPath: /host/etc
              name: etc-fs
              readOnly: true
          env:
      volumes:
        - name: root-falco-fs
          emptyDir: {}  
        - name: boot-fs
          hostPath:
            path: /boot
        - name: lib-modules
          hostPath:
            path: /lib/modules
        - name: usr-fs
          hostPath:
            path: /usr
        - name: etc-fs
          hostPath:
            path: /etc
        - name: dev-fs
          hostPath:
            path: /dev
        - name: sys-fs
          hostPath:
            path: /sys/module/falco
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: containerd-socket
          hostPath:
            path: /run/containerd/containerd.sock
        - name: crio-socket
          hostPath:
            path: /run/crio/crio.sock
        - name: proc-fs
          hostPath:
            path: /proc
        - name: config-volume
          configMap:
            name: falco
            items:
              - key: falco.yaml
                path: falco.yaml
              - key: falco_rules.yaml
                path: falco_rules.yaml
              - key: falco_rules.local.yaml
                path: falco_rules.local.yaml
              - key: application_rules.yaml
                path: rules.available/application_rules.yaml
              - key: k8s_audit_rules.yaml
                path: k8s_audit_rules.yaml
              - key: aws_cloudtrail_rules.yaml
                path: aws_cloudtrail_rules.yaml
        
  updateStrategy:
    type: RollingUpdate
---
# Source: falco/charts/falcosidekick/templates/deployment-ui.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: falco-falcosidekick-ui
  namespace: falco
  labels:
    app.kubernetes.io/name: falcosidekick-ui
    helm.sh/chart: falcosidekick-0.5.9
    app.kubernetes.io/instance: falco-ui
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: falcosidekick-ui
      app.kubernetes.io/instance: falco-ui
  template:
    metadata:
      labels:
        app.kubernetes.io/name: falcosidekick-ui
        app.kubernetes.io/instance: falco-ui
    spec:
      serviceAccountName: falco-falcosidekick-ui
      securityContext:
        fsGroup: 1234
        runAsUser: 1234
      containers:
        - name: falcosidekick-ui
          image: "docker.io/falcosecurity/falcosidekick-ui:v2.0.2"
          imagePullPolicy: IfNotPresent
          args:
            - "-r"
            - falco-falcosidekick-ui-redis:6379
          ports:
            - name: http
              containerPort: 2802
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/v1/healthz
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /api/v1/healthz
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
          resources:
            {}
---
# Source: falco/charts/falcosidekick/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: falco-falcosidekick
  namespace: falco
  labels:
    app.kubernetes.io/name: falcosidekick
    helm.sh/chart: falcosidekick-0.5.9
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: falcosidekick
      app.kubernetes.io/instance: falco
  template:
    metadata:
      labels:
        app.kubernetes.io/name: falcosidekick
        app.kubernetes.io/instance: falco
      annotations:
        checksum/config: 33750e209a520efdf61e62020a6e1664d8cc57356a0a9264fd888e86d6bd7b98
    spec:
      serviceAccountName: falco-falcosidekick
      securityContext:
        fsGroup: 1234
        runAsUser: 1234
      containers:
        - name: falcosidekick
          image: "docker.io/falcosecurity/falcosidekick:2.26.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 2801
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ping
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /ping
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
          envFrom:
            - secretRef:
                name: falco-falcosidekick
          env:
            - name: DEBUG
              value: "false"
            - name: CUSTOMFIELDS
              value: ""
            - name: MUTUALTLSFILESPATH
              value: "/etc/certs"
          resources:
            {}
---
# Source: falco/charts/falcosidekick/templates/deployment-ui.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: falco-falcosidekick-ui-redis
  namespace: falco
  labels:
    app.kubernetes.io/name: falcosidekick-ui-redis
    helm.sh/chart: falcosidekick-0.5.9
    app.kubernetes.io/instance: falco-ui
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  serviceName: falco-falcosidekick-ui-redis
  selector:
    matchLabels:
      app.kubernetes.io/name: falcosidekick-ui-redis
      app.kubernetes.io/instance: falco-ui-redis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: falcosidekick-ui-redis
        app.kubernetes.io/instance: falco-ui-redis
    spec:
      serviceAccountName: falco-falcosidekick-ui
      containers:
        - name: redis
          image: "docker.io/redislabs/redisearch:2.2.4"
          imagePullPolicy: IfNotPresent
          args: []
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          livenessProbe: 
            tcpSocket:
              port: 6379
            initialDelaySeconds: 5 
            periodSeconds: 5 
            timeoutSeconds: 2 
            successThreshold: 1 
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 5 
            periodSeconds: 5 
            timeoutSeconds: 2 
            successThreshold: 1 
            failureThreshold: 3
          volumeMounts:
          - name: falco-falcosidekick-ui-redis-data
            mountPath: /data
          resources:
            {}
  volumeClaimTemplates:
    - metadata:
        name: falco-falcosidekick-ui-redis-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
