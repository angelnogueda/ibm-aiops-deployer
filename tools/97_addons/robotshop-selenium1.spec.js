// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('RobotShop Test', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('test', async function() {
    await driver.get("https://robotshop-robot-shop.apps.661ce247548608001edc5f96.cloud.techzone.ibm.com/")
    await driver.manage().window().setRect({ width: 1998, height: 1415 })
    await driver.findElement(By.css(".ng-scope:nth-child(2) > .category")).click()
    await driver.findElement(By.linkText("Extreme Probe Emulator")).click()
    {
      const element = await driver.findElement(By.linkText("High-Powered Travel Droid"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    await driver.findElement(By.linkText("Responsive Enforcer Droid")).click()
    await driver.findElement(By.css(".ng-scope > button")).click()
    await driver.findElement(By.css(".ng-scope > button")).click()
    await driver.findElement(By.css(".ng-scope > button")).click()
    {
      const element = await driver.findElement(By.css(".ng-scope > button"))
      await driver.actions({ bridge: true}).doubleClick(element).perform()
    }
    await driver.findElement(By.css(".ng-scope > button")).click()
    await driver.findElement(By.css(".ng-scope > button")).click()
    await driver.findElement(By.id("vote-3")).click()
    await driver.findElement(By.linkText("Strategic Human Control Emulator")).click()
    await driver.findElement(By.css(".ng-scope > button")).click()
    await driver.findElement(By.css(".ng-scope > button")).click()
    {
      const element = await driver.findElement(By.css(".ng-scope > button"))
      await driver.actions({ bridge: true}).doubleClick(element).perform()
    }
    await driver.findElement(By.linkText("Login / Register")).click()
    await driver.findElement(By.css(".ng-dirty")).sendKeys("user")
    await driver.findElement(By.css("tr:nth-child(2) .ng-not-empty")).sendKeys("password")
    await driver.findElement(By.css("tr:nth-child(1) .ng-dirty")).click()
    await driver.findElement(By.css("tr:nth-child(3) button")).click()
    await driver.findElement(By.linkText("Cart")).click()
    {
      const element = await driver.findElement(By.linkText("Cart"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    await driver.findElement(By.css("button:nth-child(1)")).click()
    {
      const element = await driver.findElement(By.css("button:nth-child(1)"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    await driver.findElement(By.css("div:nth-child(2) > .ng-pristine")).click()
    await driver.findElement(By.linkText("Stan\'s Robot Shop")).click()
    {
      const element = await driver.findElement(By.linkText("Stan\'s Robot Shop"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
  })
})
